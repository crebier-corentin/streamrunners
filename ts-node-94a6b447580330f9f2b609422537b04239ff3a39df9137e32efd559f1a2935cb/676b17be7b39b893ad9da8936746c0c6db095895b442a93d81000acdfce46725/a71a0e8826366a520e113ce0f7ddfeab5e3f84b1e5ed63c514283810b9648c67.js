"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
class BaseMigration1535611208297 {
    up(queryRunner) {
        return __awaiter(this, void 0, void 0, function* () {
            yield queryRunner.query("CREATE TABLE `stream_queue` (`id` int NOT NULL AUTO_INCREMENT, `amount` int NOT NULL DEFAULT 100, `time` int NOT NULL DEFAULT 60, `current` int NOT NULL DEFAULT 0, `start` datetime NULL, `createdAt` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `userId` int NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
            yield queryRunner.query("CREATE TABLE `stream_session` (`id` int NOT NULL AUTO_INCREMENT, `amount` int NOT NULL DEFAULT 100, `start` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP, `last` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP, `ended` tinyint NOT NULL DEFAULT 0, `createdAt` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `userId` int NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
            yield queryRunner.query("CREATE TABLE `watch_session` (`id` int NOT NULL AUTO_INCREMENT, `start` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP, `last` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP, `userId` int NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
            yield queryRunner.query("CREATE TABLE `user` (`id` int NOT NULL AUTO_INCREMENT, `twitchId` varchar(255) NOT NULL, `username` varchar(255) NOT NULL, `display_name` varchar(255) NOT NULL, `email` varchar(255) NOT NULL, `avatar` varchar(255) NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
            yield queryRunner.query("CREATE TABLE `manual_points` (`id` int NOT NULL AUTO_INCREMENT, `amount` int NOT NULL, `createdAt` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `userId` int NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
            yield queryRunner.query("ALTER TABLE `stream_queue` ADD CONSTRAINT `FK_4c57791f489aeae47721e7885c2` FOREIGN KEY (`userId`) REFERENCES `user`(`id`) ON DELETE CASCADE");
            yield queryRunner.query("ALTER TABLE `stream_session` ADD CONSTRAINT `FK_5d859efcfd20003f8d8447c875a` FOREIGN KEY (`userId`) REFERENCES `user`(`id`) ON DELETE CASCADE");
            yield queryRunner.query("ALTER TABLE `watch_session` ADD CONSTRAINT `FK_661824d1af2805b7846382d6270` FOREIGN KEY (`userId`) REFERENCES `user`(`id`) ON DELETE CASCADE");
            yield queryRunner.query("ALTER TABLE `manual_points` ADD CONSTRAINT `FK_20ad463604853de5518010becbc` FOREIGN KEY (`userId`) REFERENCES `user`(`id`) ON DELETE CASCADE");
        });
    }
    down(queryRunner) {
        return __awaiter(this, void 0, void 0, function* () {
            yield queryRunner.query("ALTER TABLE `manual_points` DROP FOREIGN KEY `FK_20ad463604853de5518010becbc`");
            yield queryRunner.query("ALTER TABLE `watch_session` DROP FOREIGN KEY `FK_661824d1af2805b7846382d6270`");
            yield queryRunner.query("ALTER TABLE `stream_session` DROP FOREIGN KEY `FK_5d859efcfd20003f8d8447c875a`");
            yield queryRunner.query("ALTER TABLE `stream_queue` DROP FOREIGN KEY `FK_4c57791f489aeae47721e7885c2`");
            yield queryRunner.query("DROP TABLE `manual_points`");
            yield queryRunner.query("DROP TABLE `user`");
            yield queryRunner.query("DROP TABLE `watch_session`");
            yield queryRunner.query("DROP TABLE `stream_session`");
            yield queryRunner.query("DROP TABLE `stream_queue`");
        });
    }
}
exports.BaseMigration1535611208297 = BaseMigration1535611208297;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1N0cmVhbVJ1bm5lcnMvVHdpdGNoVmlldy9kYXRhYmFzZS9taWdyYXRpb24vMTUzNTYxMTIwODI5Ny1CYXNlTWlncmF0aW9uLnRzIiwic291cmNlcyI6WyIvU3RyZWFtUnVubmVycy9Ud2l0Y2hWaWV3L2RhdGFiYXNlL21pZ3JhdGlvbi8xNTM1NjExMjA4Mjk3LUJhc2VNaWdyYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUVBLE1BQWEsMEJBQTBCO0lBRXRCLEVBQUUsQ0FBQyxXQUF3Qjs7WUFDcEMsTUFBTSxXQUFXLENBQUMsS0FBSyxDQUFDLGdUQUFnVCxDQUFDLENBQUM7WUFDMVUsTUFBTSxXQUFXLENBQUMsS0FBSyxDQUFDLHNXQUFzVyxDQUFDLENBQUM7WUFDaFksTUFBTSxXQUFXLENBQUMsS0FBSyxDQUFDLCtOQUErTixDQUFDLENBQUM7WUFDelAsTUFBTSxXQUFXLENBQUMsS0FBSyxDQUFDLG1RQUFtUSxDQUFDLENBQUM7WUFDN1IsTUFBTSxXQUFXLENBQUMsS0FBSyxDQUFDLDRNQUE0TSxDQUFDLENBQUM7WUFDdE8sTUFBTSxXQUFXLENBQUMsS0FBSyxDQUFDLDZJQUE2SSxDQUFDLENBQUM7WUFDdkssTUFBTSxXQUFXLENBQUMsS0FBSyxDQUFDLCtJQUErSSxDQUFDLENBQUM7WUFDekssTUFBTSxXQUFXLENBQUMsS0FBSyxDQUFDLDhJQUE4SSxDQUFDLENBQUM7WUFDeEssTUFBTSxXQUFXLENBQUMsS0FBSyxDQUFDLDhJQUE4SSxDQUFDLENBQUM7UUFDNUssQ0FBQztLQUFBO0lBRVksSUFBSSxDQUFDLFdBQXdCOztZQUN0QyxNQUFNLFdBQVcsQ0FBQyxLQUFLLENBQUMsK0VBQStFLENBQUMsQ0FBQztZQUN6RyxNQUFNLFdBQVcsQ0FBQyxLQUFLLENBQUMsK0VBQStFLENBQUMsQ0FBQztZQUN6RyxNQUFNLFdBQVcsQ0FBQyxLQUFLLENBQUMsZ0ZBQWdGLENBQUMsQ0FBQztZQUMxRyxNQUFNLFdBQVcsQ0FBQyxLQUFLLENBQUMsOEVBQThFLENBQUMsQ0FBQztZQUN4RyxNQUFNLFdBQVcsQ0FBQyxLQUFLLENBQUMsNEJBQTRCLENBQUMsQ0FBQztZQUN0RCxNQUFNLFdBQVcsQ0FBQyxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztZQUM3QyxNQUFNLFdBQVcsQ0FBQyxLQUFLLENBQUMsNEJBQTRCLENBQUMsQ0FBQztZQUN0RCxNQUFNLFdBQVcsQ0FBQyxLQUFLLENBQUMsNkJBQTZCLENBQUMsQ0FBQztZQUN2RCxNQUFNLFdBQVcsQ0FBQyxLQUFLLENBQUMsMkJBQTJCLENBQUMsQ0FBQztRQUN6RCxDQUFDO0tBQUE7Q0FFSjtBQTFCRCxnRUEwQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge01pZ3JhdGlvbkludGVyZmFjZSwgUXVlcnlSdW5uZXJ9IGZyb20gXCJ0eXBlb3JtXCI7XG5cbmV4cG9ydCBjbGFzcyBCYXNlTWlncmF0aW9uMTUzNTYxMTIwODI5NyBpbXBsZW1lbnRzIE1pZ3JhdGlvbkludGVyZmFjZSB7XG5cbiAgICBwdWJsaWMgYXN5bmMgdXAocXVlcnlSdW5uZXI6IFF1ZXJ5UnVubmVyKTogUHJvbWlzZTxhbnk+IHtcbiAgICAgICAgYXdhaXQgcXVlcnlSdW5uZXIucXVlcnkoXCJDUkVBVEUgVEFCTEUgYHN0cmVhbV9xdWV1ZWAgKGBpZGAgaW50IE5PVCBOVUxMIEFVVE9fSU5DUkVNRU5ULCBgYW1vdW50YCBpbnQgTk9UIE5VTEwgREVGQVVMVCAxMDAsIGB0aW1lYCBpbnQgTk9UIE5VTEwgREVGQVVMVCA2MCwgYGN1cnJlbnRgIGludCBOT1QgTlVMTCBERUZBVUxUIDAsIGBzdGFydGAgZGF0ZXRpbWUgTlVMTCwgYGNyZWF0ZWRBdGAgZGF0ZXRpbWUoNikgTk9UIE5VTEwgREVGQVVMVCBDVVJSRU5UX1RJTUVTVEFNUCg2KSwgYHVzZXJJZGAgaW50IE5VTEwsIFBSSU1BUlkgS0VZIChgaWRgKSkgRU5HSU5FPUlubm9EQlwiKTtcbiAgICAgICAgYXdhaXQgcXVlcnlSdW5uZXIucXVlcnkoXCJDUkVBVEUgVEFCTEUgYHN0cmVhbV9zZXNzaW9uYCAoYGlkYCBpbnQgTk9UIE5VTEwgQVVUT19JTkNSRU1FTlQsIGBhbW91bnRgIGludCBOT1QgTlVMTCBERUZBVUxUIDEwMCwgYHN0YXJ0YCBkYXRldGltZSBOT1QgTlVMTCBERUZBVUxUIENVUlJFTlRfVElNRVNUQU1QLCBgbGFzdGAgZGF0ZXRpbWUgTk9UIE5VTEwgREVGQVVMVCBDVVJSRU5UX1RJTUVTVEFNUCwgYGVuZGVkYCB0aW55aW50IE5PVCBOVUxMIERFRkFVTFQgMCwgYGNyZWF0ZWRBdGAgZGF0ZXRpbWUoNikgTk9UIE5VTEwgREVGQVVMVCBDVVJSRU5UX1RJTUVTVEFNUCg2KSwgYHVzZXJJZGAgaW50IE5VTEwsIFBSSU1BUlkgS0VZIChgaWRgKSkgRU5HSU5FPUlubm9EQlwiKTtcbiAgICAgICAgYXdhaXQgcXVlcnlSdW5uZXIucXVlcnkoXCJDUkVBVEUgVEFCTEUgYHdhdGNoX3Nlc3Npb25gIChgaWRgIGludCBOT1QgTlVMTCBBVVRPX0lOQ1JFTUVOVCwgYHN0YXJ0YCBkYXRldGltZSBOT1QgTlVMTCBERUZBVUxUIENVUlJFTlRfVElNRVNUQU1QLCBgbGFzdGAgZGF0ZXRpbWUgTk9UIE5VTEwgREVGQVVMVCBDVVJSRU5UX1RJTUVTVEFNUCwgYHVzZXJJZGAgaW50IE5VTEwsIFBSSU1BUlkgS0VZIChgaWRgKSkgRU5HSU5FPUlubm9EQlwiKTtcbiAgICAgICAgYXdhaXQgcXVlcnlSdW5uZXIucXVlcnkoXCJDUkVBVEUgVEFCTEUgYHVzZXJgIChgaWRgIGludCBOT1QgTlVMTCBBVVRPX0lOQ1JFTUVOVCwgYHR3aXRjaElkYCB2YXJjaGFyKDI1NSkgTk9UIE5VTEwsIGB1c2VybmFtZWAgdmFyY2hhcigyNTUpIE5PVCBOVUxMLCBgZGlzcGxheV9uYW1lYCB2YXJjaGFyKDI1NSkgTk9UIE5VTEwsIGBlbWFpbGAgdmFyY2hhcigyNTUpIE5PVCBOVUxMLCBgYXZhdGFyYCB2YXJjaGFyKDI1NSkgTk9UIE5VTEwsIFBSSU1BUlkgS0VZIChgaWRgKSkgRU5HSU5FPUlubm9EQlwiKTtcbiAgICAgICAgYXdhaXQgcXVlcnlSdW5uZXIucXVlcnkoXCJDUkVBVEUgVEFCTEUgYG1hbnVhbF9wb2ludHNgIChgaWRgIGludCBOT1QgTlVMTCBBVVRPX0lOQ1JFTUVOVCwgYGFtb3VudGAgaW50IE5PVCBOVUxMLCBgY3JlYXRlZEF0YCBkYXRldGltZSg2KSBOT1QgTlVMTCBERUZBVUxUIENVUlJFTlRfVElNRVNUQU1QKDYpLCBgdXNlcklkYCBpbnQgTlVMTCwgUFJJTUFSWSBLRVkgKGBpZGApKSBFTkdJTkU9SW5ub0RCXCIpO1xuICAgICAgICBhd2FpdCBxdWVyeVJ1bm5lci5xdWVyeShcIkFMVEVSIFRBQkxFIGBzdHJlYW1fcXVldWVgIEFERCBDT05TVFJBSU5UIGBGS180YzU3NzkxZjQ4OWFlYWU0NzcyMWU3ODg1YzJgIEZPUkVJR04gS0VZIChgdXNlcklkYCkgUkVGRVJFTkNFUyBgdXNlcmAoYGlkYCkgT04gREVMRVRFIENBU0NBREVcIik7XG4gICAgICAgIGF3YWl0IHF1ZXJ5UnVubmVyLnF1ZXJ5KFwiQUxURVIgVEFCTEUgYHN0cmVhbV9zZXNzaW9uYCBBREQgQ09OU1RSQUlOVCBgRktfNWQ4NTllZmNmZDIwMDAzZjhkODQ0N2M4NzVhYCBGT1JFSUdOIEtFWSAoYHVzZXJJZGApIFJFRkVSRU5DRVMgYHVzZXJgKGBpZGApIE9OIERFTEVURSBDQVNDQURFXCIpO1xuICAgICAgICBhd2FpdCBxdWVyeVJ1bm5lci5xdWVyeShcIkFMVEVSIFRBQkxFIGB3YXRjaF9zZXNzaW9uYCBBREQgQ09OU1RSQUlOVCBgRktfNjYxODI0ZDFhZjI4MDViNzg0NjM4MmQ2MjcwYCBGT1JFSUdOIEtFWSAoYHVzZXJJZGApIFJFRkVSRU5DRVMgYHVzZXJgKGBpZGApIE9OIERFTEVURSBDQVNDQURFXCIpO1xuICAgICAgICBhd2FpdCBxdWVyeVJ1bm5lci5xdWVyeShcIkFMVEVSIFRBQkxFIGBtYW51YWxfcG9pbnRzYCBBREQgQ09OU1RSQUlOVCBgRktfMjBhZDQ2MzYwNDg1M2RlNTUxODAxMGJlY2JjYCBGT1JFSUdOIEtFWSAoYHVzZXJJZGApIFJFRkVSRU5DRVMgYHVzZXJgKGBpZGApIE9OIERFTEVURSBDQVNDQURFXCIpO1xuICAgIH1cblxuICAgIHB1YmxpYyBhc3luYyBkb3duKHF1ZXJ5UnVubmVyOiBRdWVyeVJ1bm5lcik6IFByb21pc2U8YW55PiB7XG4gICAgICAgIGF3YWl0IHF1ZXJ5UnVubmVyLnF1ZXJ5KFwiQUxURVIgVEFCTEUgYG1hbnVhbF9wb2ludHNgIERST1AgRk9SRUlHTiBLRVkgYEZLXzIwYWQ0NjM2MDQ4NTNkZTU1MTgwMTBiZWNiY2BcIik7XG4gICAgICAgIGF3YWl0IHF1ZXJ5UnVubmVyLnF1ZXJ5KFwiQUxURVIgVEFCTEUgYHdhdGNoX3Nlc3Npb25gIERST1AgRk9SRUlHTiBLRVkgYEZLXzY2MTgyNGQxYWYyODA1Yjc4NDYzODJkNjI3MGBcIik7XG4gICAgICAgIGF3YWl0IHF1ZXJ5UnVubmVyLnF1ZXJ5KFwiQUxURVIgVEFCTEUgYHN0cmVhbV9zZXNzaW9uYCBEUk9QIEZPUkVJR04gS0VZIGBGS181ZDg1OWVmY2ZkMjAwMDNmOGQ4NDQ3Yzg3NWFgXCIpO1xuICAgICAgICBhd2FpdCBxdWVyeVJ1bm5lci5xdWVyeShcIkFMVEVSIFRBQkxFIGBzdHJlYW1fcXVldWVgIERST1AgRk9SRUlHTiBLRVkgYEZLXzRjNTc3OTFmNDg5YWVhZTQ3NzIxZTc4ODVjMmBcIik7XG4gICAgICAgIGF3YWl0IHF1ZXJ5UnVubmVyLnF1ZXJ5KFwiRFJPUCBUQUJMRSBgbWFudWFsX3BvaW50c2BcIik7XG4gICAgICAgIGF3YWl0IHF1ZXJ5UnVubmVyLnF1ZXJ5KFwiRFJPUCBUQUJMRSBgdXNlcmBcIik7XG4gICAgICAgIGF3YWl0IHF1ZXJ5UnVubmVyLnF1ZXJ5KFwiRFJPUCBUQUJMRSBgd2F0Y2hfc2Vzc2lvbmBcIik7XG4gICAgICAgIGF3YWl0IHF1ZXJ5UnVubmVyLnF1ZXJ5KFwiRFJPUCBUQUJMRSBgc3RyZWFtX3Nlc3Npb25gXCIpO1xuICAgICAgICBhd2FpdCBxdWVyeVJ1bm5lci5xdWVyeShcIkRST1AgVEFCTEUgYHN0cmVhbV9xdWV1ZWBcIik7XG4gICAgfVxuXG59XG4iXX0=